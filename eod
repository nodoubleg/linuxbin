#!/bin/bash
# EOD automation for nodoubleg.
# No need for markdown notes, as my notes on are *paper* !
# So, we're just doing all this shit in bash, because https://www.youtube.com/watch?v=Qy-Y3HJNU_s
rcpt='bootstack-cre-reports@greenteam.canonical.com'
lxc='mail'

if [ "$1" == "pvg" ]
then
        vg="pvg" 
elif [ "$1" == "bvg" ]
then
        vg="bvg"
elif [ "$1" == "wvg" ]
then
        vg="wvg"
# Just a placeholder for now, for interrupt-protected squad thing in bootstack.
elif [ "$1" == "projects" ]
then
        vg="projects"
else
        echo "Usage: $0 <pvg|bvg|wvg|bootstack>"
        exit 1
fi


myname=$(getent passwd $LOGNAME | cut -d: -f5 | cut -d, -f1)
subject="`date '+%Y-%m-%d (%A)'` EOD Report for $myname"
#TODO: fix this to not need a temp file
tmpfile=/tmp/eod-$$-tmpfile

# first, let's fetch some victory! 
# due to UTF8, these lines may not display properly in an editor.
getvictory() {
w3m https://portal.admin.canonical.com/fail -dump | head -n1 | grep -qi victory
}
if getvictory
then
    victory='😄 💪🐸' 
else
    echo 'FAIL! Fix this fail:'
    w3m https://portal.admin.canonical.com/fail -dump
    w3m https://portal.admin.canonical.com/fail -dump_source | gunzip -c | awk -F '"' '/target="_blank">[C,U]/{print $2}'
    if [ -z $skipfail ]; then
        exit 1
    else
        victory=💩🎆
    fi
fi

# gross hack, should fix this.
# put the email header in for sup
echo "To: $rcpt
From: Greg Mason <greg.mason@canonical.com>
Subject: $subject" >> $tmpfile
echo >> $tmpfile

# Let's scrape some stuff out of myday.
myday=$(w3m https://portal.admin.canonical.com/myday -dump_source | gunzip -c)

# Just defining template stuff here, because why not.
SOD_MISC_INTERRUPTS='
SOD/Misc stuff:
===============
 - 

Maintenance time:
=================
 - 

Humans/PD/interruptions:
========================

'

ALERTHEADER='PD Alerts:
=========='

# TODO: add logic for if bootstack.
# TODO: eventually do SF ticket history stuff.
TICKETHEADER='

SF Tickets:
===========
 
RT Tickets:
===========

'
PVG="
EOD Checklist:
 - PVG 
     - Incoming RT queue:
     - Nagios/Maintenance Work: 
 - Portal Fail Page: ${victory}
 - RQ items: 
 - Clicktime time: 

#vim: sw=2 ts=2 et ai textwidth=78 syntax=markdown"
WVG="
EOD Checklist:
 - WVG 
     - Incoming RT queue: 
     - Nagios/Maintenance Work: 
 - Portal Fail Page: ${victory}
 - RQ items: "
BVG="
EOD Checklist:
 - BVG 
     - Incoming RT queue: n/a
     - Nagios/Maintenance Work: 
 - Portal Fail Page: ${victory}
 - RQ items: 
 - Clicktime time: 

#vim: sw=2 ts=2 et ai textwidth=78 syntax=markdown"
PROJECTS="
EOD Checklist:
 - Projects
     - Incoming RT queue:
     - Nagios/Maintenance Work: 
 - Portal Fail Page: ${victory}
 - RQ items: 
 - Clicktime time: 

#vim: sw=2 ts=2 et ai textwidth=78 syntax=markdown"


# Assemble the body.
echo "$SOD_MISC_INTERRUPTS" >> $tmpfile
# Fetching list of mentions in IRC from bouncer.
ssh gmason@bip.nodoubleg.com 'sudo -u bip bash /home/bip/todays_mentions.sh' >> $tmpfile
# get today's PD alerts.
echo "$ALERTHEADER" >> $tmpfile
ssh gmason@bip.nodoubleg.com 'sudo -u bip bash /home/bip/todays_alerts.sh' >> $tmpfile
echo "$TICKETHEADER" >> $tmpfile
# get list of all ticket titles.
echo "$myday" | grep 'href="https://rt' | awk -F '<|>' '{print $5}' >> $tmpfile
#TODO: add logic by fetching {W,P,B}VG status from Dashboard.
echo ''
if [ "$vg" == "pvg" ]
then
	echo "$PVG" >> $tmpfile
elif [ "$vg" == "wvg" ]
then
	echo "$WVG" >> $tmpfile
elif [ "$vg" == "bvg" ]
then
	echo "$BVG" >> $tmpfile
fi
echo "$myday" | grep 'Work time logged in RT' -A4 >> $tmpfile

# Email time! finally! woo!
lxc file push $tmpfile $lxc/tmp/eod

echo
echo "eod is in /tmp/eod in lxc."
echo "c <enter>"
echo "GG :read /tmp/eod"
echo

#lxc exec $lxc -- su - $USER -c "sup-mail -c $rcpt -j $subject"
#sylpheed --compose $rcpt "mailto:$rcpt?subject=$subject"




# Cleanup
rm $tmpfile

notify-send --urgency=CRITICAL -t 3600000 "DROP TOPICS!"
hamster-cli stop
hamster-cli start EOD
